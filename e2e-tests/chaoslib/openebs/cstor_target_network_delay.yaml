- name: Setup pumba chaos infrastructure
  shell: >
    kubectl apply -f /e2e-tests/chaoslib/pumba/pumba_kube.yaml
    -n {{ app_ns }}
  args:
    executable: /bin/bash
  register: result 

- name: Confirm that the pumba ds is running on all nodes
  shell: >
    kubectl get pod -l app=pumba 
    --no-headers -o custom-columns=:status.phase
    -n {{ app_ns }} | sort | uniq
  args: 
    executable: /bin/bash
  register: result
  until: "result.stdout == 'Running'"
  delay: 20
  retries: 15

- name: Derive PV from application PVC 
  shell: >
    kubectl get pvc {{ app_pvc }}
    -o custom-columns=:spec.volumeName -n {{ app_ns }}
    --no-headers
  args:
    executable: /bin/bash
  register: pv

- name: Pick a cStor target pod belonging to the PV
  shell: >
    kubectl get pods -l openebs.io/target=cstor-target
    -n {{ operator_ns }} --no-headers | grep {{ pv.stdout }}
    | shuf -n1 | awk '{print $1}'
  args:
    executable: /bin/bash
  register: cstor_target_pod

- name: Get the node on which the cstor target is scheduled
  shell: >
    kubectl get pod {{ cstor_target_pod.stdout }} -n {{ operator_ns }}
    --no-headers -o custom-columns=:spec.nodeName
  args:
    executable: /bin/bash
  register: node  

- name: Identify the pumba pod that co-exists with cstor target
  shell: >
    kubectl get pods -l app=pumba -n {{ app_ns }} 
    -o jsonpath='{.items[?(@.spec.nodeName==''"{{ node.stdout }}"'')].metadata.name}'
  args:
    executable: /bin/bash
  register: pumba_pod

- name: Inject egress delay of {{network_delay}}ms on cstor target for {{ chaos_duration }}ms
  shell: >
    kubectl exec {{ pumba_pod.stdout }} -n {{ app_ns }} 
    -- pumba netem --interface eth0 --duration {{ chaos_duration }}ms delay
    --time {{ network_delay }} re2:k8s_cstor-istgt_{{ cstor_target_pod.stdout }} 
  args:
    executable: /bin/bash

- name: Wait for 10s post fault injection 
  wait_for:
    timeout: 10

- name: Delete the pumba daemonset 
  shell: kubectl delete -f /e2e-tests/chaoslib/pumba/pumba_kube.yaml -n {{ app_ns }} 
  args:
    executable: /bin/bash
  register: result

- name: Confirm that the pumba ds is deleted successfully
  shell: >
    kubectl get pods -l app=pumba --no-headers -n {{ app_ns }}
  args:
    executable: /bin/bash
  register: result
  until: "'Running' not in result.stdout"
  delay: 20
  retries: 15
