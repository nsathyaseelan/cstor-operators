---
- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - test_vars.yml

  tasks:
    - block:

         ## Generating the testname for deployment
        - include_tasks: /e2e-tests/utils/fcm/create_testname.yml

         ## RECORD START-OF-TEST IN E2E RESULT CR
        - include_tasks: "/e2e-tests/utils/fcm/update_e2e_result_resource.yml"
          vars:
            status: 'SOT'

        - name: Getting the compute node name
          shell: kubectl get nodes --no-headers | grep -v master | awk {'print $1'} | head -{{ pool_count }} 
          register: nodes
          failed_when: "(nodes.stdout_lines|length) != pool_count|int"

        - name: set the value for the disk count to fetch the unclaimed blockDevice from each node
          set_fact:
            disk_count: "{{ item.value.count }}"
          loop: "{{ lookup('dict', bd_count) }}"
          when: "'{{ pool_type }}' in item.key"

        # Creating the blockdevice template from blockdevice.j2 jinja template for each node
        - name: Add node labels for each nodes and create blockdevice template
          template:
            src: ./blockdevice.j2
            dest: ./blockdevice-{{ item[0] }}.yml
          with_together:
            - "{{ nodes.stdout_lines }}"

        - name: Add the block devices for each node's block device template
          include_tasks: add_blockdevice.yml
          with_items: "{{ nodes.stdout_lines }}"
          loop_control:
            loop_var: outer_item

        # Insert the blockdevice template created for each nodes into cspc spec
        # blockinfile module will insert the external_files/block.
        # marker line template will be replaced with the values in marker_begin (default="BEGIN") and marker_end (default="END").
        - name: Include the blockdevice template in the CSPC spec
          blockinfile:
            dest: ./cspc.yml
            marker_end: "## {{ item }} Ansible Config ##"
            insertafter: pools
            state: present
            block: |
              {{ lookup('file', './blockdevice-{{ item }}.yml') }}
          with_items:
            - "{{ nodes.stdout_lines }}"

        - name: Replacing the pool name in CSPC spec
          replace:
            path: ./cspc.yml
            regexp: "pool-name"
            replace: "{{ pool_name }}"

        - name: Replacing the namespace in CSPC spec
          replace:
            path: ./cspc.yml
            regexp: "operator_ns"
            replace: "{{ operator_ns }}"

        - name: Replacing the pool type in CSPC spec
          replace:
            path: ./cspc.yml
            regexp: "pool-type"
            replace: "{{ pool_type }}"

        - name: Display cspc.yml for verification
          debug: var=item
          with_file:
          - "cspc.yml"

        - name: Create cstor disk pool
          shell: kubectl apply -f cspc.yml
          args:
            executable: /bin/bash
          register: cspc_status
          failed_when: "'use claimed blockdevice' not in cspc_status.stderr and cspc_status.rc == 0"
 
        - set_fact:
            flag: "Pass"

      rescue:
        - set_fact:
            flag: "Fail"

      always:
            ## RECORD END-OF-TEST IN E2E RESULT CR
          - include_tasks: /e2e-tests/utils/fcm/update_e2e_result_resource.yml
            vars:
              status: 'EOT'
